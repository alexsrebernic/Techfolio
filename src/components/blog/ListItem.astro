---
import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG } from '~/utils/config';

import { getLocalizedPermalink, getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';
import Button from '../ui/Button.astro';
import { getLocaleFromUrl, useTranslations } from '~/i18n/translator';
import type { Post } from '~/types';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = (await findImage(post.image)) as ImageMetadata | undefined;
const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
const locale = getLocaleFromUrl(Astro.url)
const {t} = useTranslations(locale)
---
<article class="flex gap-6 xl:gap-16 md:space-y-0 md:flex-row  flex-col-reverse">
  <div class="flex-1 space-y-4">
    <div class="mb-1">
      <span class="text-sm text-subtitle font-light">
        <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
        <time datetime={String(post.publishDate)} class="inline-block">{getFormattedDate(post.publishDate)}</time>   
        {
          post.author && (
            <>
              {' '}
              ·{' '}
              <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
              <span>{post.author.replaceAll('-', ' ')}</span>
            </>
          )
        }
        {
          post.category && (
            <>
              {' '}
              ·{' '}
              <a class="capitalize hover:underline" href={getLocalizedPermalink(locale,post.category, 'category')}>
                {post.category.replaceAll('-', ' ')}
              </a>
            </>
          )
        }
        
      </span>
    </div>
    <h2 class="text-xl sm:text-2xl font-medium leading-tight mb-2  dark:text-slate-300">
      {
        link ? (
          <a class="hover:text-primary dark:hover:text-gray-800 transition ease-in duration-200 break-all" href={link}>
            {post.title}
          </a>
        ) : (
          post.title
        )
      }
    </h2>    
    <div class="pb-2 text-sm">
      {post.excerpt && 
        <Fragment  set:html={post.excerpt}/>
      }
    </div>
    
    <Button href={link ?? 'javascript:void(0)'}  variant="secondary" text={t('buttons.read_more')}/>
      <footer class="mt-5">
        <PostTags tags={post.tags} />
      </footer>
  </div>
    {
      image && (
        <a class="relative block group flex-1" href={link ?? 'javascript:void(0)'}>
          <div class="relative h-0 pb-[56.25%] md:pb-[75%] md:h-72 lg:pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded-xl shadow-lg">
            {image && (
              <Image
                src={image}
                class="absolute inset-0 object-cover w-full h-full mb-6 rounded-xl shadow-xl bg-gray-400 dark:bg-slate-700"
                widths={[400, 900]}
                width={900}
                sizes="(max-width: 900px) 400px, 900px"
                alt={post.title}
                aspectRatio="16:9"
                loading="lazy"
                decoding="async"
              />
            )}
          </div>
        </a>
      )
    }
</article>

