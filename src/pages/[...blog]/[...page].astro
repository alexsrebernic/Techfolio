---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import Layout from '@/layouts/PageLayout.astro';
import BlogList from '@/components/blog/List.astro';
import Pagination from '@/components/blog/Pagination.astro';
// import PostTags from "@/components/blog/Tags.astro";

import { blogListRobots, getStaticPathsBlogList } from '@/utils/blog';
import { I18N } from '@/utils/config';
import { getLocaleFromUrl, useTranslations } from '@/i18n/translator';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogList({ paginate });
}) satisfies GetStaticPaths;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const currentPage = page.currentPage ?? 1;
const locale = getLocaleFromUrl(Astro.url)
const {t} = useTranslations(locale)

// const allCategories = await findCategories();
// const allTags = await findTags();
const metadata = {
  title: `Blog${currentPage > 1 ? ` â€” Page ${currentPage}` : ''}`,
  robots: {
    index: blogListRobots?.index && currentPage === 1,
    follow: blogListRobots?.follow,
  },
  openGraph: {
    type: 'blog',
  },
};
---

<Layout metadata={metadata}>
  <section class="">
    <div class="space-y-4 font-[600] mb-10">
      <h1 class="text-3xl font-[600] ">
        {t('blog.title')}
      </h1>
      <p class="text-md font-[400] text-subtitle">
        {t('blog.subtitle')}
      </p>
    </div>
    <section data-aos="fade-up">
      <BlogList posts={page.data.map(p => p.locales[locale])}  />
      <Pagination prevUrl={page.url.prev} nextUrl={page.url.next}  />
    </section>
    <!--
      <PostTags tags={allCategories} class="mb-2" title="Search by Categories:" isCategory />
      <PostTags tags={allTags}  title="Search by Tags:" />
    -->
  </section>
</Layout>
